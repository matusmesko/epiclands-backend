type Query {

    getAllLuckpermsPlayers: [LuckPermsPlayer]
    getOwners: [LuckPermsPlayer]
    getTraineeBuilders: [LuckPermsPlayer]
    getHelpers: [LuckPermsPlayer]
    getBuilders: [LuckPermsPlayer]
    getCoOwners: [LuckPermsPlayer]
    getEventers: [LuckPermsPlayer]
    getMainHelpers: [LuckPermsPlayer]
    getTraineeHelpers: [LuckPermsPlayer]
    getAdmins: [LuckPermsPlayer]
    getDevelopers: [LuckPermsPlayer]
    getMainBuilders: [LuckPermsPlayer]
    getMainDevelopers: [LuckPermsPlayer]
    getMainTechnics: [LuckPermsPlayer]
    getTechnics: [LuckPermsPlayer]
    getTesters: [LuckPermsPlayer]
    getManagement: [LuckPermsPlayer]
    getPlayersByRank(rank: String): [LuckPermsPlayer]
}

type Mutation {
    updatePlayers: StatusEntity
}

type StatusEntity {
    status: Status,
    message: String,
}

enum Status {
    SUCCESS,FAILED
}
